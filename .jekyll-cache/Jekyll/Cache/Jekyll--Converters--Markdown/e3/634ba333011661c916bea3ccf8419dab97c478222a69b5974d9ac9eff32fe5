I"›{<h1 id="les-3-connexions-du-client-couchbase-java">Les 3 connexions du client couchbase java</h1>

<div id="toc-js">
</div>

<h2 id="avant-propos">Avant propos</h2>

<p>Dans les exemples de ce billet, je travaille avec
1 cluster constitu√© de 3 noeuds.</p>

<p>Le cluster g√®re 2 buckets, <em>sso</em> et <em>cache</em>.</p>

<h2 id="4-promesses">4 promesses</h2>

<p>Quand on visite la page <a href="http://www.couchbase.com/couchbase-server/overview">overview</a>
de couchbase server, on nous vante 4 m√©rites √† ce produit :</p>

<dl>
  <dt>Scalabilit√© facile</dt>
  <dd>l‚Äôajout et la suppression de noeud hyper simplifi√©e.</dd>
  <dt>Jamais d‚Äôindisponibilit√©</dt>
  <dd>toutes les op√©rations de maintenance cluster se font sans interruption.</dd>
  <dt>Haute performance</dt>
  <dd>la vitesse d‚Äôacc√®s aux donn√©es est constante.</dd>
  <dt>Mod√®le flexible</dt>
  <dd>pas de sh√©ma, on stocke ce que l‚Äôon veut.</dd>
</dl>

<p>Nous allons voir comment ces avantages sont mis en oeuvre c√¥t√© client.</p>

<h2 id="cr√©ation-du-client">Cr√©ation du client</h2>

<p>La cr√©ation d‚Äôun client se fait simplement en renseignant <strong>un</strong> 
(j‚Äôy reviendrai) des noeuds du cluster, le nom du bucket,
et l‚Äô√©ventuel password.</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java">    
    <span class="kd">public</span> <span class="nc">CouchbaseClient</span> <span class="nf">newCouchbaseClient</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="no">URI</span><span class="o">&gt;</span> <span class="n">baseList</span> <span class="o">=</span> <span class="n">asList</span><span class="o">(</span><span class="no">URI</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="s">"http://node1:8091/pools"</span><span class="o">));</span>
        <span class="k">return</span> <span class="k">new</span> <span class="nf">CouchbaseClient</span><span class="o">(</span><span class="n">baseList</span><span class="o">,</span><span class="s">"sso"</span><span class="o">,</span><span class="s">""</span><span class="o">);</span>
    <span class="o">}</span>
    </code></pre></figure>

<p>Le client offre une <a href="http://www.couchbase.com/docs/couchbase-sdk-java-1.1/api-reference-summary.html">API</a>
riche qui permet d‚Äôint√©ragir simplement avec couchbase, en faisant du
cl√©/valeur ou en interrogeant des views.</p>

<p>Derri√®re cette simplicit√© se cache une machinerie assez lourde ‚Ä¶</p>

<h2 id="phase-de-bootstrap">Phase de bootstrap</h2>

<p>Quand on cr√©e un client, on passe une <code class="highlighter-rouge">baseList</code>.
Cette <code class="highlighter-rouge">baseList</code> contient une liste d‚ÄôURL sur laquelle les clients 
peuvent interroger une API REST afin de d√©couvrir la topologie 
du cluster et d‚Äôinitier une connexion vers un bucket.</p>

<p>La <code class="highlighter-rouge">baseList</code> doit contenir l‚ÄôURL d‚Äôau moins un des noeuds du cluster.</p>

<p>C√¥t√© serveur,</p>

<p>chaque <em>bucket</em> est dans une liste de buckets,</p>

<p>cette liste appartient √† une <em>pool</em>,</p>

<p>et il existe plusieurs <em>pools</em>.</p>

<p>Le client va r√©cup√©rer successivement ces informations du plus 
gros grain, la liste de pools, jusqu‚Äôau bucket qu‚Äôon lui a 
sp√©cifi√©.</p>

<p>La r√©cup√©ration de la liste des pools se fait sur <code class="highlighter-rouge">http://node1:8091/pools</code></p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="w">	</span><span class="p">{</span><span class="w">
		</span><span class="nl">"pools"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
			</span><span class="p">{</span><span class="w">
				</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"default"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"uri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default?uuid=b7e59676b22aecc10425b23507368662"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"streamingUri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/poolsStreaming/default?uuid=b7e59676b22aecc10425b23507368662"</span><span class="w">
			</span><span class="p">}</span><span class="w">
		</span><span class="p">]</span><span class="w">
	</span><span class="p">}</span></code></pre></figure>

<p>On voit qu‚Äôil existe une seule pool, appel√©e <em>default</em>. On r√©cup√®re 
ses informations sur <code class="highlighter-rouge">http://node1:8091/pools/default?uuid=b7e59676b22aecc10425b23507368662</code></p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="w">    </span><span class="p">{</span><span class="w">

    </span><span class="nl">"storageTotals"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"default"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"alerts"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">],</span><span class="w">
    </span><span class="nl">"alertsSilenceURL"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/controller/resetAlerts?token=0&amp;uuid=e9909bc948c7ad5a9358db43e0f1d32f"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"nodes"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">],</span><span class="w">
    </span><span class="nl">"buckets"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"uri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/buckets?v=125187379&amp;uuid=e9909bc948c7ad5a9358db43e0f1d32f"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"remoteClusters"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"uri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/remoteClusters?uuid=e9909bc948c7ad5a9358db43e0f1d32f"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"validateURI"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/remoteClusters?just_validate=1"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"controllers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="nl">"balanced"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failoverWarnings"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="p">],</span><span class="w">
    </span><span class="nl">"rebalanceStatus"</span><span class="p">:</span><span class="w"> </span><span class="s2">"none"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"rebalanceProgressUri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/rebalanceProgress"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"stopRebalanceUri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/controller/stopRebalance?uuid=e9909bc948c7ad5a9358db43e0f1d32f"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"nodeStatusesUri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/nodeStatuses"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"maxBucketCount"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
    </span><span class="nl">"autoCompactionSettings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="nl">"fastWarmupSettings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="nl">"tasks"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="nl">"stats"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="nl">"counters"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">‚Ä¶</span><span class="w"> </span><span class="p">},</span><span class="w">
    </span><span class="nl">"stopRebalanceIsSafe"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">

    </span><span class="p">}</span><span class="w">
	</span></code></pre></figure>

<p>Ensuite le client r√©cup√®re la liste des buckets sur
<code class="highlighter-rouge">http://node1:8091/pools/default/buckets?v=125187379&amp;uuid=e9909bc948c7ad5a9358db43e0f1d32f</code></p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="w">	
	</span><span class="p">[</span><span class="w">
		</span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">},</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">infos</span><span class="w"> </span><span class="err">bucket</span><span class="w"> </span><span class="err">sso</span><span class="w">
		</span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">}</span><span class="w">  </span><span class="err">//</span><span class="w"> </span><span class="err">infos</span><span class="w"> </span><span class="err">bucket</span><span class="w"> </span><span class="err">cache</span><span class="w">
	</span><span class="p">]</span><span class="w">
		</span></code></pre></figure>

<p>Apr√®s cette phase de bootstrap, le client dispose de 
toutes les informations requises pour se connecter au bucket et 
travailler dessus. Je d√©taillerai ces informations plus tard.</p>

<h2 id="les-3-types-de-connexion-du-client">Les 3 types de connexion du client</h2>

<p><img src="/images/articles/couchbase/connexions.svg" alt="Les 3 types de connexion du client" /></p>

<p>Le client a 3 types de connexion :</p>

<ul>
  <li>En vert, le <em>bucket monitor</em>, un canal par lequel le cluster informe le client de sa topologie.</li>
  <li>En jaune, le canal par lequel transite le protocol couchbase (set, get, delete, ‚Ä¶)</li>
  <li>En rouge, le canal par lequel le client peut interroger les vues</li>
</ul>

<p>Le client <strong>doit</strong> ouvrir un canal jaune et rouge sur <strong>chacun</strong> des noeuds. 
Le canal vert est ouvert sur l‚Äôun des noeuds seulement.</p>

<h3 id="le-bucket-monitor">Le bucket monitor</h3>

<p>Le <em>bucket monitor</em> permet au client de d√©couvrit et d‚Äô√™tre averti des
modifications de topologie du cluster.</p>

<p>A la phase de bootstrap le client avait finalement r√©cup√©r√© la liste
des buckets. En d√©tail cela contient les noeuds auxquels il est rattach√©,
et o√π sont distribu√©es les cl√©s.</p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="w">	</span><span class="p">{</span><span class="w">

		</span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sso"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"bucketType"</span><span class="p">:</span><span class="w"> </span><span class="s2">"membase"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"authType"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sasl"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"saslPassword"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
		</span><span class="nl">"proxyPort"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
		</span><span class="nl">"replicaIndex"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
		</span><span class="nl">"uri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/buckets/sso?bucket_uuid=dbb0c92417cc30b0050f5170948e5ef9"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"streamingUri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/bucketsStreaming/sso?bucket_uuid=dbb0c92417cc30b0050f5170948e5ef9"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"localRandomKeyUri"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/buckets/sso/localRandomKey"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"controllers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
			</span><span class="nl">"flush"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/buckets/sso/controller/doFlush"</span><span class="p">,</span><span class="w">
			</span><span class="nl">"compactAll"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/buckets/sso/controller/compactBucket"</span><span class="p">,</span><span class="w">
			</span><span class="nl">"compactDB"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/pools/default/buckets/sso/controller/compactDatabases"</span><span class="w">
		</span><span class="p">},</span><span class="w">
		</span><span class="nl">"nodes"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
			</span><span class="p">{</span><span class="w">
				</span><span class="nl">"couchApiBase"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://node1:8092/sso"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"systemStats"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">},</span><span class="w">
				</span><span class="nl">"interestingStats"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">},</span><span class="w">
				</span><span class="nl">"uptime"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1716233"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"memoryTotal"</span><span class="p">:</span><span class="w"> </span><span class="mi">4019253248</span><span class="p">,</span><span class="w">
				</span><span class="nl">"memoryFree"</span><span class="p">:</span><span class="w"> </span><span class="mi">961105920</span><span class="p">,</span><span class="w">
				</span><span class="nl">"mcdMemoryReserved"</span><span class="p">:</span><span class="w"> </span><span class="mi">3066</span><span class="p">,</span><span class="w">
				</span><span class="nl">"mcdMemoryAllocated"</span><span class="p">:</span><span class="w"> </span><span class="mi">3066</span><span class="p">,</span><span class="w">
				</span><span class="nl">"replication"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
				</span><span class="nl">"clusterMembership"</span><span class="p">:</span><span class="w"> </span><span class="s2">"active"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"healthy"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"thisNode"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
				</span><span class="nl">"hostname"</span><span class="p">:</span><span class="w"> </span><span class="s2">"10.40.64.116:8091"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"clusterCompatibility"</span><span class="p">:</span><span class="w"> </span><span class="mi">131072</span><span class="p">,</span><span class="w">
				</span><span class="nl">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2.0.0-1976-rel-community"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"os"</span><span class="p">:</span><span class="w"> </span><span class="s2">"x86_64-unknown-linux-gnu"</span><span class="p">,</span><span class="w">
				</span><span class="nl">"ports"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
					</span><span class="nl">"proxy"</span><span class="p">:</span><span class="w"> </span><span class="mi">11211</span><span class="p">,</span><span class="w">
					</span><span class="nl">"direct"</span><span class="p">:</span><span class="w"> </span><span class="mi">11210</span><span class="w">
				</span><span class="p">}</span><span class="w">
			</span><span class="p">},</span><span class="w">
			</span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">},</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">infos</span><span class="w"> </span><span class="err">node</span><span class="mi">2</span><span class="w">
			</span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">},</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">infos</span><span class="w"> </span><span class="err">node</span><span class="mi">3</span><span class="w">
		</span><span class="p">],</span><span class="w">
		</span><span class="nl">"stats"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">},</span><span class="w">
		</span><span class="nl">"nodeLocator"</span><span class="p">:</span><span class="w"> </span><span class="s2">"vbucket"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"autoCompactionSettings"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
		</span><span class="nl">"fastWarmupSettings"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
		</span><span class="nl">"uuid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dbb0c92417cc30b0050f5170948e5ef9"</span><span class="p">,</span><span class="w">
		</span><span class="nl">"vBucketServerMap"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
			</span><span class="nl">"hashAlgorithm"</span><span class="p">:</span><span class="w"> </span><span class="s2">"CRC"</span><span class="p">,</span><span class="w">
			</span><span class="nl">"numReplicas"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
			</span><span class="nl">"serverList"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
				</span><span class="s2">"node1:11210"</span><span class="p">,</span><span class="w">
				</span><span class="s2">"node2:11210"</span><span class="p">,</span><span class="w">
				</span><span class="s2">"node3:11210"</span><span class="w">
			</span><span class="p">],</span><span class="w">
			</span><span class="nl">"vBucketMap"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
				</span><span class="p">[</span><span class="w">
					</span><span class="mi">0</span><span class="p">,</span><span class="w">
					</span><span class="mi">1</span><span class="w">
				</span><span class="p">],</span><span class="w">
				</span><span class="p">[</span><span class="w">
					</span><span class="mi">0</span><span class="p">,</span><span class="w">
					</span><span class="mi">2</span><span class="w">
				</span><span class="p">],</span><span class="w">
				</span><span class="p">[</span><span class="w">
					</span><span class="mi">1</span><span class="p">,</span><span class="w">
					</span><span class="mi">0</span><span class="w">
				</span><span class="p">],</span><span class="w">
				</span><span class="err">....</span><span class="w"> </span><span class="err">//</span><span class="w"> </span><span class="err">beaucoup</span><span class="w"> </span><span class="err">beaucoup</span><span class="w"> </span><span class="err">(</span><span class="mi">1018</span><span class="err">)</span><span class="w">
				</span><span class="p">[</span><span class="w">
					</span><span class="mi">1</span><span class="p">,</span><span class="w">
					</span><span class="mi">2</span><span class="w">
				</span><span class="p">],</span><span class="w">
				</span><span class="p">[</span><span class="w">
					</span><span class="mi">2</span><span class="p">,</span><span class="w">
					</span><span class="mi">0</span><span class="w">
				</span><span class="p">],</span><span class="w">
				</span><span class="p">[</span><span class="w">
					</span><span class="mi">2</span><span class="p">,</span><span class="w">
					</span><span class="mi">1</span><span class="w">
				</span><span class="p">]</span><span class="w">
			</span><span class="p">]</span><span class="w">
		</span><span class="p">},</span><span class="w">
		</span><span class="nl">"replicaNumber"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
		</span><span class="nl">"quota"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
			</span><span class="nl">"ram"</span><span class="p">:</span><span class="w"> </span><span class="mi">314572800</span><span class="p">,</span><span class="w">
			</span><span class="nl">"rawRAM"</span><span class="p">:</span><span class="w"> </span><span class="mi">104857600</span><span class="w">
		</span><span class="p">},</span><span class="w">
		</span><span class="nl">"basicStats"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="err">...</span><span class="w"> </span><span class="p">},</span><span class="w">
		</span><span class="nl">"bucketCapabilitiesVer"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
		</span><span class="nl">"bucketCapabilities"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
			</span><span class="s2">"touch"</span><span class="p">,</span><span class="w">
			</span><span class="s2">"couchapi"</span><span class="w">
		</span><span class="p">]</span><span class="w">

	</span><span class="p">}</span></code></pre></figure>

<p>Dans cette description l‚Äôune des infos est la fameuse <code class="highlighter-rouge">streamingUri</code>. 
Le client ouvre une connexion permanente dessus, dite de streaming,
genre <a href="http://en.wikipedia.org/wiki/Comet_%28programming%29">Comet</a>. 
C‚Äôest via ce canal que le client est inform√© des modifications de 
topologie du cluster (ajout d‚Äôun noeud, noeud en failover, ‚Ä¶).
Quand une modification survient, le client se reconfigure automatiquement.</p>

<h3 id="communication-avec-couchbase-jaune">Communication avec couchbase (jaune)</h3>

<p>Couchbase promet des temps d‚Äôacc√®s aux donn√©es constants. Cela est
notamment d√ª au fait que la charge de travail est r√©partie √©quitablement 
sur chaque noeud du cluster. En effet, une cl√© est sous la responsabilit√© 
d‚Äôun seul noeud et d‚Äôun seul.</p>

<p>Aussi, le client √† la <strong>responsabilit√©</strong> d‚Äôenvoyer ou de demander des 
cl√©s <strong>directement</strong> au bon noeud du cluster. 
Par cons√©quence, le client doit se connecter √† tous les noeuds du cluster
afin de travailler avec n‚Äôimporte quel cl√©.</p>

<p>A la phase de bootstrap, couchbase r√©cup√®re l‚Äôint√©gralit√© des 
g√©n√©ralement adresses des noeuds du cluster et y ouvre une connexion 
TCP permanente, g√©n√©ralement sur le port 11210.</p>

<h4 id="r√©partition-des-cl√©s">R√©partition des cl√©s</h4>

<p>A la phase de bootstrap le client r√©cup√®re la <code class="highlighter-rouge">vBucketServerMap</code>.
Elle est constitu√©e de 4 informations :</p>

<ul>
  <li><code class="highlighter-rouge">hashAlgorithm</code> : l‚Äôalgorithme de hashage utilis√© pour r√©partir 
les cl√©s sur les noeuds. Ici, un simple <a href="http://fr.wikipedia.org/wiki/Contr%C3%B4le_de_redondance_cyclique">CRC</a></li>
  <li><code class="highlighter-rouge">numReplica</code> : le nombre de fois que la cl√© est r√©pliqu√©e.</li>
  <li><code class="highlighter-rouge">serverList</code> : le tableau des noeuds du cluster. L‚Äôordre est important</li>
  <li><code class="highlighter-rouge">vBucketMap</code> : la r√©partition des cl√©s dans les noeuds du cluster.</li>
</ul>

<p>C‚Äôest un tableau de 1024 √©l√©ments. Chaque √©l√©ment est appel√© <em>virtual 
bucket</em>. Cela permet de simuler un cluster de 1024 noeuds.
Un <em>virtual bucket</em> est un tableau. Le nombre √† l‚Äôindice 0 est le noeud
dit <em>master</em> qui est responsable de la cl√©. Les indices suivants sont 
les noeuds <em>replicas</em> o√π sont stock√©es les r√©pliques.</p>

<p>Avec ces informations, le client est en mesure de connaitre pour une
cl√© <code class="highlighter-rouge">k</code> le noeud <em>master</em> et les noeuds <em>replicas</em>.</p>

<p>dans notre cas (pseudo code):</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>indiceVBucketMap = CRC(k) modulo 1024
noeud_master = vBucketMap[indiceVBucketMap][0]
noeud_replica1 = vBucketMap[indiceVBucketMap][1]
</code></pre></div></div>

<p>Le client a donc bien la responsabilit√© d‚Äôacc√©der au bon noeud.
A l‚Äôinsertion, il envoie la cl√© au noeud <em>master</em> et aux noeuds <em>replicas</em>.
A la r√©cup√©ration, le client interroge le noeud <em>master</em>, √©ventuellement
les <em>replicas</em> s‚Äôil est en <em>failover</em>.
Pour s‚Äôen convaicre, cette m√©thode, exp√©rimentale, renvoie l‚Äôaddresse du 
noeud <em>master</em> pour une cl√© :</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java">	<span class="kd">private</span> <span class="nc">String</span> <span class="nf">getNodeByKey</span><span class="o">(</span><span class="nc">String</span> <span class="n">key</span><span class="o">,</span> <span class="nc">CouchbaseClient</span> <span class="n">couchbaseClient</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">NoSuchFieldException</span><span class="o">,</span> <span class="nc">IllegalAccessException</span> <span class="o">{</span>
			<span class="nc">Field</span> <span class="n">declaredField</span> <span class="o">=</span> <span class="nc">MemcachedClient</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getDeclaredField</span><span class="o">(</span><span class="s">"mconn"</span><span class="o">);</span>
			<span class="n">declaredField</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
			<span class="nc">Object</span> <span class="n">mconn</span> <span class="o">=</span> <span class="n">declaredField</span><span class="o">.</span><span class="na">lget</span><span class="o">(</span><span class="n">couchbaseClient</span><span class="o">);</span>
			<span class="nc">NodeLocator</span> <span class="n">locator</span> <span class="o">=</span> <span class="o">((</span><span class="nc">CouchbaseConnection</span><span class="o">)</span> <span class="n">mconn</span><span class="o">).</span><span class="na">getLocator</span><span class="o">();</span>
			<span class="k">return</span> <span class="n">locator</span><span class="o">.</span><span class="na">getPrimary</span><span class="o">(</span><span class="n">key</span><span class="o">).</span><span class="na">getSocketAddress</span><span class="o">().</span><span class="na">toString</span><span class="o">();</span>
	<span class="o">}</span></code></pre></figure>

<h3 id="canal-des-vues">Canal des vues</h3>

<p>Bien que l‚Äôinterrogation d‚Äôune vue puisse se faire sur n‚Äôimporte quel
noeud, un canal d√©di√© aux vues est ouvert sur chaque noeud du cluster.</p>

<p>Cela permet de r√©partir la charge en faisant du <a href="http://fr.wikipedia.org/wiki/Round-robin_%28informatique%29">round robin</a>
sur la liste des noeuds.</p>

<h2 id="4-promesses-tenues-">4 promesses tenues ?</h2>

<dl>
  <dt>Scalabilit√© facile</dt>
  <dd>Le bucket monitor permet de r√©pondre automatiquement aux changements
de topologie du cluster.</dd>
  <dt>Jamais d‚Äôindisponibilit√©</dt>
  <dd>Le client s‚Äôadapte sans red√©marrage.</dd>
  <dt>Haute performance</dt>
  <dd>Les cl√©s sont r√©parties uniform√©ment sur tous les noeuds du cluster
gr√¢ce au syst√®me de virtual bucket. 
Aussi, l‚Äôinterrogation des vues ne se fait jamais sur le m√™me noeud.
Ainsi la charge du cluster est r√©partie sur tous les noeuds du client.</dd>
  <dt>Mod√®le flexible</dt>
  <dd>Au niveau de l‚ÄôAPI, la cl√© est une chaine de caract√®re, et la 
valeur est un <code class="highlighter-rouge">Object</code> s√©rialisable. Bref, c‚Äôest libre.</dd>
</dl>

<h2 id="conclusion">Conclusion</h2>

<p>Couchbase r√©ussit √† tenir ses promesses en d√©l√©gant pas mal 
d‚Äôintelligence au client: localisation des noeuds, r√©plication, ‚Ä¶</p>

<p>Ce qu‚Äôon retient aussi c‚Äôest la lourdeur d‚Äôinitialisation du client.
Plus les noeuds du cluster sont nombreux, plus la phase d‚Äôinitialisation 
prend du temps car le nombre de connexions TCP √† ouvrir est assez 
impressionnant.</p>

<p>Il va sans dire (mais on le dit quand m√™me) qu‚Äôil ne faut cr√©er qu‚Äôune
seule fois un client par application.</p>

:ET